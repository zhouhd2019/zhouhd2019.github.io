---
layout:     post
title:      "Hierarchical Architecture for Group Navigation Behaviors"
subtitle:   "GameAIPro2 Chapter20"
date:       2021-05-25  22:05:00
author:     "zhouhd"
header-img: "img/about-bg.jpg"
catalog: true
tags:
    - GameAI
    - GameAIPro
    - GameAIPro2
    - GameProgramming
---

本文主要讨论了如何实现群体移动系统，先简述了不同种类的群体寻路，接下来详述了本文提出的分层架构，以及它的设计

## 群体导航分类
- 常见有三种：鸟群，队列，小型社会群体
- 鸟群是一种比较简单的群体，成员以相近速度朝着相近方向前进，整体保持一定的聚集性，自然界的兽群都可以用这种群体来模拟
- 队列保持严格的阵型，队员之间保持一定距离，不同种类的队员分布在阵型的不同位置，常见于实时策略游戏
- 小型社会群体的常见例子是三个人在路上走路，一般会采用并肩而行、V型或者一字跟随

## 导航流水线架构
- 导航行为负责计算速度变化，通常输入是一条到达某个目标的路径，输出是驱动运行引擎的指令
- 导航流水线是一系列的导航行为，例如跟随行为、受伤行为、避让行为可以依次执行，每种行为以前者的输出作为输入，计算后将自身结果传给下一种行为作为输入

## 群体成员关系模型
- 常见方法有两种：指定其中一个成员作为领导，引入一个代表群体的虚拟对象
- 本文提出一种分层对象架构，将群体也看作对象，它的属性由成员对象或者成员群体计算获得
- 群体对象位置可以从子对象的重心计算而来，体积可以简化为圆或者OBB，其它属性以此类推
- 每个对象的属性可以根据上一次模拟的结果来计算，这样便于多线程或者分帧计算

## 寻路与结构
- 群体寻路应该优先寻找能够快速通过的路径，并且遇到狭窄通道时能够按需调整群体自身的阵型
- 鸟群可以用三种力来实现，分离力让个体远离近邻，队列力让个体和整体保持方向一致，凝聚力让个体向锚点移动，加入其它种类的力可以满足更多的需求
- 阵型可以定义好位置，每个子对象自行寻找并走向该去的位置
- 在本文的分层对象结构中，指令发给最顶层的群体对象，它先计算出当前位置和速度，然后子对象自己根据自身属性和群体对象属性等等计算自己的速度

## 阵型
- 如果需要保持一定阵型，群体一般需要三个步骤：设计阵型，位置分配，阵型跟随
- 阵型的每个位置一般包含坐标、朝向和角色等属性，同一个阵型在人数不一样的情况下具体排列也应该不一样
- 如果简单让每个角色走向最近的位置，那么最远的角色需要绕过一堆角色才能到达，但计算最佳分配方案的复杂度是O(n!)。一种简单可行的方法是，先根据空间坐标对每个位置排序，然后对角色坐标也进行排序，最后按顺序一一分配即可
- 对于群体避让算法，最好选择能够支持OBB的，如果只用圆形，结果一般会过度避让
- 移动时可能需要阵型变换，计算前需要预定义可用阵型（包括转换中的）。每次计算，先根据当前阵型找出几个可选阵型，对每种可选阵型，计算避让结果，得到速度和碰撞时间；综合避让结果和阵型转换消耗，采用综合消耗最低的那种阵型
