---
layout:     post
title:      "Fast Cars, Big City: The AI of Driver San Francisco"
subtitle:   "GameAIPro3 Chapter17"
date:       2021-09-22  20:30:00
author:     "zhouhd"
header-img: "img/about-bg.jpg"
catalog: true
tags:
    - GameAI
    - GameAIPro
    - GameAIPro3
    - GameProgramming
---

本文讲述了Driver San Francisco的AI实现，它是一个开放世界驾驶游戏，主角可以随时附身到任何司机身上，之前的角色会马上由AI接管。AI难点在于车辆移动和随时切换角色。

### 概述
- 为了保持60帧，AI更新采用异步并且多线程的实现
- 车辆路径规划必须考虑到其它车辆，它们都是可移动的障碍物，另外还要符合物理定律

### 动态AI
- 游戏将车辆分成了两种，一种是市民交通AI，另一种是动态AI
- 市民交通AI只会沿着循环样条曲线移动，每个样条曲线不会和其它曲线交叉，车辆移动速度等等参数基本是确定的，一般情况下市民交通AI不会发生碰撞
- 动态AI可以执行赛车、追逐和逃离等任务，采用复杂的路径生成算法
- 当玩家切换附身司机时，如果之前的角色有任务，例如正在追逐别人，动态AI会接管，继续追逐。如果没有任务，会尝试采用市民交通AI进行简单的移动
- 路径更新系统会定期提前计算好接下来需要走的路径，使得车辆能够一直保持正常行驶
- 玩家车辆的路径由物理系统和航位推测算法来决定，市民交通AI的路径是简单的样条曲线
- 动态AI路径生成包含三种LOD：最简单的是根据路径信息，生成接下来要走的样条曲线；中级LOD会加上简单的动态避让和速度限制；最高LOD用于玩家附近且在镜头内的车辆，会进行细致的路径优化

### 路径规划和生成
- 游戏内的每条道路都可以用一条样条曲线来描述，会记录两个端点分别连接了哪些道路，还有它自身的车道信息
- 路径生成有两种情况。终点确定的情况采用多层AStar算法，地图分为了三部分，每部分之间用桥连接，如果终点在别的部分，需要先移动到桥。如果是逃离任务，则采用一种动态的路径生成算法
- 中级路径规划会将车辆前面100M的路径简化为一堆路点，搜索得到5条候选路径，计算5条路经的移动消耗，需要考虑障碍物和转向角度等等条件
- 中级路径规划还会给出每一小段的速度限制，例如有转弯的地方需要提前减速

### 细节路径优化
- 中级路径规划没有考虑到物理等细节，需要更细致的优化
- 路径优化只会发生在车的附近区域，优化接下来几秒的路径，首先可以排除那些有障碍不能走的地方，然后计算静态和动态势能图
- 静态势能图，将可以移动的区域分成多个小格子，每个格子计算最优移动方向。对于人行道，车辆必须立刻驶出，因此人行道格子的方向指向最近的道路。对于逆行车道，需要尽快回到正确车道，因此格子方向等于前进方向和指向正确车道方向之和
- 动态势能图和静态势能图类似，只不过是针对可移动障碍，例如其它车辆，在障碍周围产生多个向外的力，避免碰撞
- 细节路径优化需要迭代多次才能获得比较好的效果，一般3到4次即可，过多的迭代会造成浪费
