---
layout:     post
title:      "LKD Page Cache"
subtitle:   "页高速缓存和页回写"
date:       2020-02-07 14:59:00
author:     "zhouhd"
header-img: "img/about-bg.jpg"
catalog: true
tags:
    - Linux
    - Linux Kernel
---

对应LKD3第16章页高速缓存和页回写。

- 页高速缓存用于磁盘缓存，减少对磁盘的IO操作，由内存物理页面组成，内容对应磁盘上的物理块。
- 对于写操作，缓存处理策略是回写write-back，程序执行写操作直接写到缓存，不会马上写到磁盘，而是将被写入的页面标记为脏，加到脏页表链表，然后由回写进程定期将脏页写道磁盘。
- 内存不足或者干净页面不足，会进行缓存回收，将部分脏页面强制写到磁盘。对于选择哪些页面来强制回写，Linux实现的是修改过的LRU，采用FIFO活跃链表和非活跃链表，活跃链表上的页面不会被换出，非活跃链表上的页面可以被换出。页面先在非活跃链表，如果被访问了就换到活跃链表。如果活跃链表过多就将头页面放回非活跃链表。
- 页高速缓存中的页可能包含多个不连续的物理磁盘块，能够缓存各种类型的文件和内存映射。所以使用了一个新对象address_space而不是inode来管理缓存项和页IO操作。
- 一个被缓存的文件只和一个address_space结构体相关，而物理页到虚拟页是一对多的映射。
- 任何页IO操作前内核都要检查页是否已经在页高速缓存中，所以这种检查要非常快，实现上使用基树。
- 块设备的缓冲区高速缓存也是页高速缓存的一部分，以前则是分开的。
- 回写在3种情况下会发生：空闲内存较少，脏页驻留时间较长，用户进程调用sync()和fsync()强制同步。这些工作由一群flusher线程进行，一个flusher线程处理一个磁盘。以前的pdflush数量动态，也不会绑定一个线程处理一个磁盘，所以会有交替发生，现在的flusher更简单。