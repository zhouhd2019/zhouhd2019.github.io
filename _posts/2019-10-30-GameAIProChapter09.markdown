---
layout:     post
title:      "GameAIPro Chapter09 10"
subtitle:   "Utility Theory"
date:       2019-11-04 21:10:00
author:     "zhouhd"
header-img: "img/about-bg.jpg"
catalog: true
tags:
    - GameAI
    - GameAIPro
    - GameProgramming
---

## 效用理论 An Introduction to Utility Theory
   - 效用分数应该是连续的，并且最好以归一化的形式表达，这样便于理解和运算（例如比较、求和、均值）
   - 决策时，应该同时考虑成功概率和成功效用，两者乘积为期望效用，一般来说，决策的目标是达到最大期望效用
   - 每个效用分数应该取决于一个或多个决策因子，例如4X游戏里面，扩张行为可能取决于拥挤和健康因子，繁殖行为取决于健康和保育因子。从上面的例子就可以看出，有些行为会取决于同一方面的水平，所以抽象出合适的决策因子非常重要，可以减少计算，也可以便于构建可视化编辑器
   - 将游戏数值转化成效用分数的函数有很多种，选择哪个或者如何组合它们是一个主观选择，取决于设计者的想法
   - 一般情况下，选择效用分数最高的行为即可。但有时需要只执行部分行为，其它的完全不考虑。这种问题可以通过将行为分桶来解决，简单来说就是将行为分为多种，每种有不同的优先等级，高优先级的行为可执行时，就不去评估低优先级的。桶的优先级也可以做成动态的，这样就更加灵活了
   - 有时AI会反复选择两个行为，这样的问题有几种解决方法：加大目前行为的权重，让AI倾向于选择相同的行为；给行为加CD，一段时间内不能选择；延迟做选择的时间，等待一段时间或者等当前行为结束

## 在行为树中应用效用理论 Building Utility Decisions into Your Existing Behavior Tree
   - 传统行为树的节点不适合用来给动态行为建模，很难实现动态优先级。可以引入效用节点，对所有子节点先进行效用评分，根据结果选择应该执行的子节点
   - 计算效用很容易出现重复计算，应该限定效用节点的使用，尤其注意在循环节点中的用法。有不少方法可以缓解这个问题：可以先计算一些通用的中间量，例如健康程度；每次行为树执行只计算一次效用评分，然后行为树执行过程中尽量使用缓存值，不去更新；先验证子节点能不能执行，再计算效用
   - 将效用评分和装饰节点结合起来，可以非常灵活
