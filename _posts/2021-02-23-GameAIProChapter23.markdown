---
layout:     post
title:      "Crowd Pathfinding and Steering Using Flow Field Tiles"
subtitle:   "GameAIPro Chapter23"
date:       2021-02-23  11:25:00
author:     "zhouhd"
header-img: "img/about-bg.jpg"
catalog: true
tags:
    - GameAI
    - GameAIPro
    - GameProgramming
---

## 群体寻路
- 大量对象同时寻路的情况下，出现碰撞时，如果总是重新计算路径，消耗会很大，同时很难解决问题。停下一段时间是比较简单的解决方法
- 场地的类型有三种：消耗场，积分场，流场
- 消耗场每个格子的数值表示路过这个格子所需成本，其中255表示不可通过。如果地图很大而且每种消耗的数据较多，应该将每种消耗做成唯一，每个格子直接引用
- 积分场以消耗场为输入，得到的结果就是积分场，作为计算最终的流场的输入。存放到达目标点的总成本
- 流场记录了每格的朝向和flag等额外信息

## 寻路请求处理过程
- 寻路请求包括多个单位各自的起点和一个终点，先对一个起点进行一次完整的A星搜索，获得一条路径，其它的起点可以不用全部重新搜索，而是尝试走到之前的路径上
- 流场计算过程：(1)重置积分场；(2)执行Line of Sight流程，如果单位在LOS内，即直线可达终点，则可以直接去，忽略积分场；(3)消耗积分流程，只需要对不在LOS内的格子进行计算。部分格子可能有多条计算路径，为了避免过多重复计算，只有在老结果远比新结果大的时候才重算；(4)流场计算，根据上一步的消耗场，计算每个格子的流向，即消耗最低的方向
- 流场缓存：如果两个移动请求的起点和终点在相同的大格子内，那么它们中途会路过一样的路口，这样可以重用中间的流场结果，只需要计算起点和终点部分即可。换句话说，每个大格子缓存所有路口相互移动的流场
- 如果起点是可移动的(例如是一辆车，人需要从车出发)，那么可以直接让起点“融合”到已有路径上，只有特定条件下才重算(例如超出一定距离)
- 如果终点是可移动的(例如想上车)，可以先沿着原来的路径移动，实时修改后面的一段或者多段
- 如果新增了阻碍，则需要重新计算某个大格子的流场，涉及到的路径都要更新一下
